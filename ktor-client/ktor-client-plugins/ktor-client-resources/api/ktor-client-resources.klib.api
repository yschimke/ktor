// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <io.ktor:ktor-client-resources>
final object io.ktor.client.plugins.resources/Resources : io.ktor.client.plugins/HttpClientPlugin<io.ktor.resources/Resources.Configuration, io.ktor.resources/Resources> { // io.ktor.client.plugins.resources/Resources|null[0]
    final val key // io.ktor.client.plugins.resources/Resources.key|{}key[0]
        final fun <get-key>(): io.ktor.util/AttributeKey<io.ktor.resources/Resources> // io.ktor.client.plugins.resources/Resources.key.<get-key>|<get-key>(){}[0]

    final fun install(io.ktor.resources/Resources, io.ktor.client/HttpClient) // io.ktor.client.plugins.resources/Resources.install|install(io.ktor.resources.Resources;io.ktor.client.HttpClient){}[0]
    final fun prepare(kotlin/Function1<io.ktor.resources/Resources.Configuration, kotlin/Unit>): io.ktor.resources/Resources // io.ktor.client.plugins.resources/Resources.prepare|prepare(kotlin.Function1<io.ktor.resources.Resources.Configuration,kotlin.Unit>){}[0]
}

final fun (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/resources(): io.ktor.resources/Resources // io.ktor.client.plugins.resources/resources|resources@io.ktor.client.HttpClient(){}[0]
final inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/href(#A): kotlin/String // io.ktor.client.plugins.resources/href|href@io.ktor.client.HttpClient(0:0){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/href(#A, io.ktor.http/URLBuilder) // io.ktor.client.plugins.resources/href|href@io.ktor.client.HttpClient(0:0;io.ktor.http.URLBuilder){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/delete(#A, kotlin/Function1<io.ktor.client.request/HttpRequestBuilder, kotlin/Unit> = ...): io.ktor.client.statement/HttpResponse // io.ktor.client.plugins.resources/delete|delete@io.ktor.client.HttpClient(0:0;kotlin.Function1<io.ktor.client.request.HttpRequestBuilder,kotlin.Unit>){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/get(#A, kotlin/Function1<io.ktor.client.request/HttpRequestBuilder, kotlin/Unit> = ...): io.ktor.client.statement/HttpResponse // io.ktor.client.plugins.resources/get|get@io.ktor.client.HttpClient(0:0;kotlin.Function1<io.ktor.client.request.HttpRequestBuilder,kotlin.Unit>){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/head(#A, kotlin/Function1<io.ktor.client.request/HttpRequestBuilder, kotlin/Unit> = ...): io.ktor.client.statement/HttpResponse // io.ktor.client.plugins.resources/head|head@io.ktor.client.HttpClient(0:0;kotlin.Function1<io.ktor.client.request.HttpRequestBuilder,kotlin.Unit>){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/options(#A, kotlin/Function1<io.ktor.client.request/HttpRequestBuilder, kotlin/Unit> = ...): io.ktor.client.statement/HttpResponse // io.ktor.client.plugins.resources/options|options@io.ktor.client.HttpClient(0:0;kotlin.Function1<io.ktor.client.request.HttpRequestBuilder,kotlin.Unit>){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/patch(#A, kotlin/Function1<io.ktor.client.request/HttpRequestBuilder, kotlin/Unit> = ...): io.ktor.client.statement/HttpResponse // io.ktor.client.plugins.resources/patch|patch@io.ktor.client.HttpClient(0:0;kotlin.Function1<io.ktor.client.request.HttpRequestBuilder,kotlin.Unit>){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/post(#A, kotlin/Function1<io.ktor.client.request/HttpRequestBuilder, kotlin/Unit> = ...): io.ktor.client.statement/HttpResponse // io.ktor.client.plugins.resources/post|post@io.ktor.client.HttpClient(0:0;kotlin.Function1<io.ktor.client.request.HttpRequestBuilder,kotlin.Unit>){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/prepareDelete(#A, kotlin/Function1<io.ktor.client.request/HttpRequestBuilder, kotlin/Unit> = ...): io.ktor.client.statement/HttpStatement // io.ktor.client.plugins.resources/prepareDelete|prepareDelete@io.ktor.client.HttpClient(0:0;kotlin.Function1<io.ktor.client.request.HttpRequestBuilder,kotlin.Unit>){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/prepareGet(#A, kotlin/Function1<io.ktor.client.request/HttpRequestBuilder, kotlin/Unit> = ...): io.ktor.client.statement/HttpStatement // io.ktor.client.plugins.resources/prepareGet|prepareGet@io.ktor.client.HttpClient(0:0;kotlin.Function1<io.ktor.client.request.HttpRequestBuilder,kotlin.Unit>){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/prepareHead(#A, kotlin/Function1<io.ktor.client.request/HttpRequestBuilder, kotlin/Unit> = ...): io.ktor.client.statement/HttpStatement // io.ktor.client.plugins.resources/prepareHead|prepareHead@io.ktor.client.HttpClient(0:0;kotlin.Function1<io.ktor.client.request.HttpRequestBuilder,kotlin.Unit>){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/prepareOptions(#A, kotlin/Function1<io.ktor.client.request/HttpRequestBuilder, kotlin/Unit> = ...): io.ktor.client.statement/HttpStatement // io.ktor.client.plugins.resources/prepareOptions|prepareOptions@io.ktor.client.HttpClient(0:0;kotlin.Function1<io.ktor.client.request.HttpRequestBuilder,kotlin.Unit>){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/preparePatch(#A, kotlin/Function1<io.ktor.client.request/HttpRequestBuilder, kotlin/Unit> = ...): io.ktor.client.statement/HttpStatement // io.ktor.client.plugins.resources/preparePatch|preparePatch@io.ktor.client.HttpClient(0:0;kotlin.Function1<io.ktor.client.request.HttpRequestBuilder,kotlin.Unit>){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/preparePost(#A, kotlin/Function1<io.ktor.client.request/HttpRequestBuilder, kotlin/Unit> = ...): io.ktor.client.statement/HttpStatement // io.ktor.client.plugins.resources/preparePost|preparePost@io.ktor.client.HttpClient(0:0;kotlin.Function1<io.ktor.client.request.HttpRequestBuilder,kotlin.Unit>){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/preparePut(#A, kotlin/Function1<io.ktor.client.request/HttpRequestBuilder, kotlin/Unit> = ...): io.ktor.client.statement/HttpStatement // io.ktor.client.plugins.resources/preparePut|preparePut@io.ktor.client.HttpClient(0:0;kotlin.Function1<io.ktor.client.request.HttpRequestBuilder,kotlin.Unit>){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/prepareRequest(#A, kotlin/Function1<io.ktor.client.request/HttpRequestBuilder, kotlin/Unit> = ...): io.ktor.client.statement/HttpStatement // io.ktor.client.plugins.resources/prepareRequest|prepareRequest@io.ktor.client.HttpClient(0:0;kotlin.Function1<io.ktor.client.request.HttpRequestBuilder,kotlin.Unit>){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/put(#A, kotlin/Function1<io.ktor.client.request/HttpRequestBuilder, kotlin/Unit> = ...): io.ktor.client.statement/HttpResponse // io.ktor.client.plugins.resources/put|put@io.ktor.client.HttpClient(0:0;kotlin.Function1<io.ktor.client.request.HttpRequestBuilder,kotlin.Unit>){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.ktor.client/HttpClient).io.ktor.client.plugins.resources/request(#A, kotlin/Function1<io.ktor.client.request/HttpRequestBuilder, kotlin/Unit>): io.ktor.client.statement/HttpResponse // io.ktor.client.plugins.resources/request|request@io.ktor.client.HttpClient(0:0;kotlin.Function1<io.ktor.client.request.HttpRequestBuilder,kotlin.Unit>){0§<kotlin.Any>}[0]
