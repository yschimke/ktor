// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <io.ktor:ktor-server-method-override>
final class io.ktor.server.plugins.methodoverride/XHttpMethodOverrideConfig { // io.ktor.server.plugins.methodoverride/XHttpMethodOverrideConfig|null[0]
    constructor <init>() // io.ktor.server.plugins.methodoverride/XHttpMethodOverrideConfig.<init>|<init>(){}[0]

    final var headerName // io.ktor.server.plugins.methodoverride/XHttpMethodOverrideConfig.headerName|{}headerName[0]
        final fun <get-headerName>(): kotlin/String // io.ktor.server.plugins.methodoverride/XHttpMethodOverrideConfig.headerName.<get-headerName>|<get-headerName>(){}[0]
        final fun <set-headerName>(kotlin/String) // io.ktor.server.plugins.methodoverride/XHttpMethodOverrideConfig.headerName.<set-headerName>|<set-headerName>(kotlin.String){}[0]
}

final val io.ktor.server.plugins.methodoverride/XHttpMethodOverride // io.ktor.server.plugins.methodoverride/XHttpMethodOverride|{}XHttpMethodOverride[0]
    final fun <get-XHttpMethodOverride>(): io.ktor.server.application/ApplicationPlugin<io.ktor.server.plugins.methodoverride/XHttpMethodOverrideConfig> // io.ktor.server.plugins.methodoverride/XHttpMethodOverride.<get-XHttpMethodOverride>|<get-XHttpMethodOverride>(){}[0]
