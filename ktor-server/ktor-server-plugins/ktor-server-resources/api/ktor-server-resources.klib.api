// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <io.ktor:ktor-server-resources>
final object io.ktor.server.resources/Resources : io.ktor.server.application/BaseApplicationPlugin<io.ktor.server.application/Application, io.ktor.resources/Resources.Configuration, io.ktor.resources/Resources> { // io.ktor.server.resources/Resources|null[0]
    final val key // io.ktor.server.resources/Resources.key|{}key[0]
        final fun <get-key>(): io.ktor.util/AttributeKey<io.ktor.resources/Resources> // io.ktor.server.resources/Resources.key.<get-key>|<get-key>(){}[0]

    final fun install(io.ktor.server.application/Application, kotlin/Function1<io.ktor.resources/Resources.Configuration, kotlin/Unit>): io.ktor.resources/Resources // io.ktor.server.resources/Resources.install|install(io.ktor.server.application.Application;kotlin.Function1<io.ktor.resources.Resources.Configuration,kotlin.Unit>){}[0]
}

final val io.ktor.server.resources/ResourceInstanceKey // io.ktor.server.resources/ResourceInstanceKey|{}ResourceInstanceKey[0]
    final fun <get-ResourceInstanceKey>(): io.ktor.util/AttributeKey<kotlin/Any> // io.ktor.server.resources/ResourceInstanceKey.<get-ResourceInstanceKey>|<get-ResourceInstanceKey>(){}[0]

final fun <#A: kotlin/Any> (io.ktor.server.routing/Route).io.ktor.server.resources/handle(kotlinx.serialization/KSerializer<#A>, kotlin.coroutines/SuspendFunction2<io.ktor.server.routing/RoutingContext, #A, kotlin/Unit>) // io.ktor.server.resources/handle|handle@io.ktor.server.routing.Route(kotlinx.serialization.KSerializer<0:0>;kotlin.coroutines.SuspendFunction2<io.ktor.server.routing.RoutingContext,0:0,kotlin.Unit>){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (io.ktor.server.routing/Route).io.ktor.server.resources/resource(kotlinx.serialization/KSerializer<#A>, kotlin/Function1<io.ktor.server.routing/Route, kotlin/Unit>): io.ktor.server.routing/Route // io.ktor.server.resources/resource|resource@io.ktor.server.routing.Route(kotlinx.serialization.KSerializer<0:0>;kotlin.Function1<io.ktor.server.routing.Route,kotlin.Unit>){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any, #B: reified kotlin/Any> (io.ktor.server.routing/Route).io.ktor.server.resources/patch(noinline kotlin.coroutines/SuspendFunction3<io.ktor.server.routing/RoutingContext, #A, #B, kotlin/Unit>): io.ktor.server.routing/Route // io.ktor.server.resources/patch|patch@io.ktor.server.routing.Route(kotlin.coroutines.SuspendFunction3<io.ktor.server.routing.RoutingContext,0:0,0:1,kotlin.Unit>){0§<kotlin.Any>;1§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any, #B: reified kotlin/Any> (io.ktor.server.routing/Route).io.ktor.server.resources/post(noinline kotlin.coroutines/SuspendFunction3<io.ktor.server.routing/RoutingContext, #A, #B, kotlin/Unit>): io.ktor.server.routing/Route // io.ktor.server.resources/post|post@io.ktor.server.routing.Route(kotlin.coroutines.SuspendFunction3<io.ktor.server.routing.RoutingContext,0:0,0:1,kotlin.Unit>){0§<kotlin.Any>;1§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any, #B: reified kotlin/Any> (io.ktor.server.routing/Route).io.ktor.server.resources/put(noinline kotlin.coroutines/SuspendFunction3<io.ktor.server.routing/RoutingContext, #A, #B, kotlin/Unit>): io.ktor.server.routing/Route // io.ktor.server.resources/put|put@io.ktor.server.routing.Route(kotlin.coroutines.SuspendFunction3<io.ktor.server.routing.RoutingContext,0:0,0:1,kotlin.Unit>){0§<kotlin.Any>;1§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> (io.ktor.server.application/Application).io.ktor.server.resources/href(#A): kotlin/String // io.ktor.server.resources/href|href@io.ktor.server.application.Application(0:0){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> (io.ktor.server.application/Application).io.ktor.server.resources/href(#A, io.ktor.http/URLBuilder) // io.ktor.server.resources/href|href@io.ktor.server.application.Application(0:0;io.ktor.http.URLBuilder){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> (io.ktor.server.routing/Route).io.ktor.server.resources/delete(noinline kotlin.coroutines/SuspendFunction2<io.ktor.server.routing/RoutingContext, #A, kotlin/Unit>): io.ktor.server.routing/Route // io.ktor.server.resources/delete|delete@io.ktor.server.routing.Route(kotlin.coroutines.SuspendFunction2<io.ktor.server.routing.RoutingContext,0:0,kotlin.Unit>){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> (io.ktor.server.routing/Route).io.ktor.server.resources/get(noinline kotlin.coroutines/SuspendFunction2<io.ktor.server.routing/RoutingContext, #A, kotlin/Unit>): io.ktor.server.routing/Route // io.ktor.server.resources/get|get@io.ktor.server.routing.Route(kotlin.coroutines.SuspendFunction2<io.ktor.server.routing.RoutingContext,0:0,kotlin.Unit>){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> (io.ktor.server.routing/Route).io.ktor.server.resources/handle(noinline kotlin.coroutines/SuspendFunction2<io.ktor.server.routing/RoutingContext, #A, kotlin/Unit>) // io.ktor.server.resources/handle|handle@io.ktor.server.routing.Route(kotlin.coroutines.SuspendFunction2<io.ktor.server.routing.RoutingContext,0:0,kotlin.Unit>){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> (io.ktor.server.routing/Route).io.ktor.server.resources/head(noinline kotlin.coroutines/SuspendFunction2<io.ktor.server.routing/RoutingContext, #A, kotlin/Unit>): io.ktor.server.routing/Route // io.ktor.server.resources/head|head@io.ktor.server.routing.Route(kotlin.coroutines.SuspendFunction2<io.ktor.server.routing.RoutingContext,0:0,kotlin.Unit>){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> (io.ktor.server.routing/Route).io.ktor.server.resources/options(noinline kotlin.coroutines/SuspendFunction2<io.ktor.server.routing/RoutingContext, #A, kotlin/Unit>): io.ktor.server.routing/Route // io.ktor.server.resources/options|options@io.ktor.server.routing.Route(kotlin.coroutines.SuspendFunction2<io.ktor.server.routing.RoutingContext,0:0,kotlin.Unit>){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> (io.ktor.server.routing/Route).io.ktor.server.resources/patch(noinline kotlin.coroutines/SuspendFunction2<io.ktor.server.routing/RoutingContext, #A, kotlin/Unit>): io.ktor.server.routing/Route // io.ktor.server.resources/patch|patch@io.ktor.server.routing.Route(kotlin.coroutines.SuspendFunction2<io.ktor.server.routing.RoutingContext,0:0,kotlin.Unit>){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> (io.ktor.server.routing/Route).io.ktor.server.resources/post(noinline kotlin.coroutines/SuspendFunction2<io.ktor.server.routing/RoutingContext, #A, kotlin/Unit>): io.ktor.server.routing/Route // io.ktor.server.resources/post|post@io.ktor.server.routing.Route(kotlin.coroutines.SuspendFunction2<io.ktor.server.routing.RoutingContext,0:0,kotlin.Unit>){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> (io.ktor.server.routing/Route).io.ktor.server.resources/put(noinline kotlin.coroutines/SuspendFunction2<io.ktor.server.routing/RoutingContext, #A, kotlin/Unit>): io.ktor.server.routing/Route // io.ktor.server.resources/put|put@io.ktor.server.routing.Route(kotlin.coroutines.SuspendFunction2<io.ktor.server.routing.RoutingContext,0:0,kotlin.Unit>){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> (io.ktor.server.routing/Route).io.ktor.server.resources/resource(noinline kotlin/Function1<io.ktor.server.routing/Route, kotlin/Unit>): io.ktor.server.routing/Route // io.ktor.server.resources/resource|resource@io.ktor.server.routing.Route(kotlin.Function1<io.ktor.server.routing.Route,kotlin.Unit>){0§<kotlin.Any>}[0]
